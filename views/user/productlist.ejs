<%-include('header')-%>


<div id="page-content" >
    
  <!--Collection Banner-->
    <div class="slideshow slideshow-wrapper pb-4">
    <div class="home-slideshow">
        <div class="slide">
            <div class="blur-up lazyload">
                <img class="blur-up lazyload desktop-show" data-src="/assets/images/slideshow-banners/home3-banner.jpg" src="/assets/images/slideshow-banners/home3-banner.jpg" alt="There is Beauty in Simplycity" title="There is Beauty in Simplycity" />
                <img class="blur-up lazyload mobile-show" data-src="/assets/images/slideshow-banners/home3-banner-mobile.jpg" src="/assets/images/slideshow-banners/home3-banner-mobile.jpg" alt="There is Beauty in Simplycity" title="There is Beauty in Simplycity" />
                <div class="slideshow__text-wrap slideshow__overlay classic middle">
                    <div class="slideshow__text-content left">
                        <div class="container">
                            <div class="wrap-caption left">
                                <h2 class="h1 mega-title slideshow__title">There is Beauty in Simplycity</h2>
                                <span class="mega-subtitle slideshow__subtitle">Save up to 50% off this weekend only</span>
                                <span class="btn">Shop now</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
 </div>


 <div class="container">
    <div class="row">
        <!--Sidebar-->
        <div class="col-12 col-sm-12 col-md-3 col-lg-3 sidebar filterbar">
            <div class="closeFilter d-block d-md-none d-lg-none"><i class="icon icon anm anm-times-l"></i></div>
            <div class="sidebar_tags">
                <!--Categories-->
                
            
                <!--Price Filter-->
                <div class="sidebar_widget filterBox filter-widget">
                    <div class="widget-title">
                        <h2>Price</h2>
                    </div>
                    <div  class="price-filter">
                        <div id="slider-range" class="ui-slider ui-slider-horizontal ui-widget ui-widget-content ui-corner-all">
                            <div class="ui-slider-range ui-widget-header ui-corner-all"></div>

                            <span class="ui-slider-handle ui-state-default ui-corner-all" tabindex="0"></span>
                            <span class="ui-slider-handle ui-state-default ui-corner-all" tabindex="0"></span>
                        </div>
                        <div class="row">
                            <div class="col-6">
                                <p class="no-margin"><input id="amount" name="priceValue" type="text"></p>
                            </div>
                            <div class="col-6 text-right margin-25px-top">
                                <button class="btn btn-secondary btn--small" id="btn-1"  style="background-color: darkslategray; ">
                                    <p style="font-size: 11px; color: beige; ">High to Low</p>
                                </button>
                                <button class="btn btn-secondary btn--small" id="btn-2"  style="background-color: darkslategray;">
                                    <p style="font-size: 11px;  color: beige;">Low to High</p>
                                </button>
                            </div>
                        </div>
                    </div>
                    <div class="sidebar_widget filterBox filter-widget">

                    <div class="widget-title">
                        <h2>Search</h2>
                    </div>
                    <!-- <ul class="dropdown" style="background-color: rgb(249, 251, 251); width: 150px;"> -->
                        <div class="form-group has-search"   id="slider-range"> 

                            <input  class="fa fa-search form-control-feedback" type="text"   value=""  id="search-value"  class="form-control" placeholder="Search" style="border: 0cm; color: rgb(15, 5, 5);">
                            <button type="button" class=" btn btn-secondary btn--small"  id="search-btn"  style="background-color: darkslategray;">
                                <p style="font-size: 11px;  color: beige;">Enter</p>
                            </button>
                        </div>
                    <!-- </ul> -->
                </div>
            </div>
            <!--End Price Filter-->
                <!--Color Swatches-->
                
              
                <!--Product Tags-->
                
                <!--end Product Tags-->
            </div>
        </div>
        <!--End Sidebar-->
        <!--Main Content-->
        <div class="col-12 col-sm-12 col-md-9 col-lg-9 main-col">
            <div class="productList">
                <!--Toolbar-->
          
                <!--End Toolbar-->
                <div class="grid-products grid--view-items">
                    <div class="row" id="orginalList" >
                        <% product.forEach((product) => { %>

                        <!-- goodjnijn k -->
                        <div class="col-6 col-sm-6 col-md-4 col-lg-3 item">
                            <!-- start product image -->
                            <div class="product-image">
                                <!-- start product image -->
                                <a href="/productdetails/<%=product._id%>">
                                    <!-- image -->
                                    <img class="primary blur-up lazyload"  data-src="<%=product.image[0]%>"    src="<%=product.image[0]%>" alt="image" title="product" />
                                    <!-- End image -->
                                    <!-- Hover image -->
                                    <img class="hover blur-up lazyload"  data-src="<%=product.image[1]%>"    src="<%=product.image[0]%>" alt="image" title="product" />
                                    <!-- End hover image -->
                                </a>
                                <!-- end product image -->

                                <!-- Start product button -->
                               
                                
                                <!-- end product button -->
                            </div>
                            <!-- end product image -->

                            <!--start product details -->
                            <div class="product-details text-center">
                                <!-- product name -->
                                <div class="product-name">
                                    <a href=""><%=product.name%></a>
                                </div>
                                <!-- End product name -->
                                <!-- product price -->
                                <div class="product-price">
                                    <span class="price"><%=product.price%></span>
                                </div>
                                <!-- End product price -->
                                
                               
                            </div>
                            <!-- End product details -->
                        </div>
                       

                        <% }) %>

                    </div>
                </div>
            </div>
            
        </div>
        <!--End Main Content-->
    </div>
</div>
   
            <div class="infinitpaginOuter" style="display: flex; justify-content: center;" id="orginalPagination">
                <div class="infinitpagin  ">	
                    <% if (totalPages > 1) { %>
                        <ul class="pagination ">
                            <% for (let i = 1; i <= totalPages; i++) { %>
                                <li class="btn-dark page-item <%= i === currentPage ? 'active' : '' %>"  style="background-color: aliceblue;">
                                    <a class="page-link" style="margin: 2px; "  href="?page=<%= i %>">
                                        <p style="font-size: 15px; color: black;" ><%= i %></p>
                                    </a>
                                </li>
                            <% } %>
                        </ul>
                    <% } %>
                </div>
            </div>

            <!--End Main Content-->
        </div>
    </div>
    
</div>


<!-- EJS script code with corrections -->




<!-- price sorting script -->


<!-- <script>
    document.addEventListener('DOMContentLoaded', function() {
        const searchInput = document.getElementById('search-value')
        
        document.getElementById('btn-1').addEventListener('click', function() {
            let searchTerm = searchInput.value.trim();     
            const value = document.getElementById('amount').value.trim();
            console.log(searchTerm);                 
            console.log(44444);      
            fetchData('/category/<%=categoryName%>/ascending',{ value, searchTerm});
        });

        document.getElementById('btn-2').addEventListener('click', function() {
            const value = document.getElementById('amount').value.trim();
            let searchTerm = searchInput.value.trim(); 
            console.log(searchTerm);                 
            console.log(333);                          
            fetchData('/category/<%=categoryName%>/descending',{  searchTerm ,value });
        });

        const fetchData = async (url, value) => {
            try {
                const response = await fetch(url, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ value }),
                });

                if (!response.ok) {
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }

                const {sortedProducts ,totalPages, currentPage ,categoryData,  minValue, maxValue ,searchTerm} = await response.json();
                const sortedProductsArray = sortedProducts;



                const productListContainer = document.getElementById('orginalList');
                const paginationContainer = document.getElementById('orginalPagination')
                paginationContainer.innerHTML ='';
                productListContainer.innerHTML = '' ; 
                console.log(sortedProductsArray);
                sortedProductsArray.forEach(product => {
                    console.log(product.name,666); // Check if the image array exists
                    console.log(898);
                    productListContainer.innerHTML +=  
                    `   
                    <div class="col-6 col-sm-6 col-md-4 col-lg-3 item">
                            <div class="product-image">
                                <a href="/productdetails/${product._id}">
                                    <img class="primary blur-up lazyload"  data-src="${product.image[0]}"    src="${product.image[0]}" alt="${product.name}" title="product" />
                                    <img class="hover blur-up lazyload"  data-src="${product.image[1]}"    src="${product.image[1]}" alt="${product.name}" title="product" />
                                </a>
                            </div>
                            <div class="product-details text-center">
                                <div class="product-name">
                                    <a href="">${product.name}</a>
                                </div>
                                <div class="product-price">
                                    <span class="price">${product.price}</span>
                                </div>
                            </div>
                        </div>
                `
                });




                if (totalPages > 1) {
        paginationContainer.innerHTML += `
    <div class="infinitpaginOuter" style="display: flex; justify-content: center;">
        <div class="infinitpagin">	
            ${
                totalPages > 1 ? 
                `<ul class="pagination">
                    ${Array.from({ length: totalPages }, (_, i) => `
                        <li class="btn-dark page-item ${i + 1 === currentPage ? 'active' : ''}" style="background-color: aliceblue;">
                            

                            <a class="page-link2" style="margin: 2px;" 
   data-category="${categoryData}" 
   data-page="${i+1}" 
   data-minValue="${minValue}" 
   data-maxValue="${maxValue}" 
   data-searchTerm="${searchTerm}">
    <p style="font-size: 15px; color: black;">${i+1}</p>
</a>
                        </li>`).join('')
                    }
                </ul>` 
                : ''
            }
        </div>
    </div>



    
`;
    }
            } catch (error) {
                console.error('Error:', error);
            }
        };
        });
    
</script> -->














 <script>
    document.addEventListener('DOMContentLoaded', function() {
        const searchInput = document.getElementById('search-value');
    
        document.getElementById('btn-1').addEventListener('click', function() {
            let searchTerm = searchInput.value.trim();     
            const value = document.getElementById('amount').value.trim();
            console.log(searchTerm);                 
            console.log(44444);      
            fetchData('/category/<%=categoryName%>/ascending',{ value, searchTerm});
        });
    
        document.getElementById('btn-2').addEventListener('click', function() {
            const value = document.getElementById('amount').value.trim();
            let searchTerm = searchInput.value.trim(); 
            console.log(searchTerm);                 
            console.log(333);                          
            fetchData('/category/<%=categoryName%>/descending',{  searchTerm ,value });
        });
    
        const fetchData = async (url, value) => {
            try {
                const response = await fetch(url, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ value }),
                });
    
                if (!response.ok) {
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }
    
                const {sortedProducts, totalPages, currentPage, categoryData, minValue, maxValue, searchTerm ,descending} = await response.json();
                const sortedProductsArray = sortedProducts;
                console.log('kl');
                console.log( totalPages, currentPage, categoryData, minValue, maxValue, searchTerm);//   its consoled properly 
                const productListContainer = document.getElementById('orginalList');
                const paginationContainer = document.getElementById('orginalPagination');
                paginationContainer.innerHTML = '';
                productListContainer.innerHTML = '';
    
                sortedProductsArray.forEach(product => {
                    productListContainer.innerHTML +=  
                        `<div class="col-6 col-sm-6 col-md-4 col-lg-3 item">
                            <div class="product-image">
                                <a href="/productdetails/${product._id}">
                                    <img class="primary blur-up lazyload" data-src="${product.image[0]}" src="${product.image[0]}" alt="${product.name}" title="product" />
                                    <img class="hover blur-up lazyload" data-src="${product.image[1]}" src="${product.image[1]}" alt="${product.name}" title="product" />
                                </a>
                            </div>
                            <div class="product-details text-center">
                                <div class="product-name">
                                    <a href="">${product.name}</a>
                                </div>
                                <div class="product-price">
                                    <span class="price">${product.price}</span>
                                </div>
                            </div>
                        </div>`;
                });
    
                if (totalPages > 1) {
                    paginationContainer.innerHTML += `
                        <div class="infinitpaginOuter" style="display: flex; justify-content: center;">
                            <div class="infinitpagin">    
                                <ul class="pagination">
                                    ${Array.from({ length: totalPages }, (_, i) => `
                                        <li class="btn-dark page-item ${i + 1 === currentPage ? 'active' : ''}" style="background-color: aliceblue;">
                                            <a class="page-link2" style="margin: 2px;" 
                                            
  
                                                            data-category="${categoryData}" 
                                                            data-page="${i + 1}" 
                                                            data-min-value="${minValue}" 
                                                            data-max-value="${maxValue}" 
                                                            data-search-Term="${searchTerm}"
                                                            data-descending="${descending}">

                                                            <p style="font-size: 15px; color: black;">${i + 1}</p>
                                                        </a>
                                               
                                               
                                        </li>`).join('')
                                    }
                                </ul>
                            </div>
                        </div>`;
                }
    
                // Add event listeners to pagination links
                const paginationLinks = document.querySelectorAll('.page-link2');
                paginationLinks.forEach(link => {
                    link.addEventListener('click', async function(event) {
                        event.preventDefault(); // Prevent default link behavior



    
                        const categoryData = this.dataset.category;
                        const page = this.dataset.page;
                        // const minValue = this.dataset.minValue
                        // const maxValue = this.dataset.maxValue;
                        // const searchTerm = this.dataset.searchTerm;
                        const minValue = this.dataset.minValue;
                        const maxValue = this.dataset.maxValue;
                        const searchTerm = this.dataset.searchTerm;
                        const descending  = this.dataset.descending 

                        console.log(categoryData, page, minValue, maxValue, searchTerm ,);// categoryData, page,  consoled rest of its undefined why
    
                        try {
                            const response = await fetch(`/category/fetch/${categoryData}`, {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                                body: JSON.stringify({ page, minValue, maxValue, searchTerm ,descending}),
                            });
    
                            if (!response.ok) {
                                throw new Error(`HTTP error! Status: ${response.status}`);
                            }
    
                            // Process the response data
                            const responseData = await response.json();
                            const { sortedProducts, totalPages, currentPage } = responseData;
    
                            productListContainer.innerHTML = ''; // Clear existing products
    
                            sortedProducts.forEach(product => {
                                productListContainer.innerHTML += `
                                    <div class="col-6 col-sm-6 col-md-4 col-lg-3 item">
                                        <div class="product-image">
                                            <a href="/productdetails/${product._id}">
                                                <img class="primary blur-up lazyload" src="${product.image[0]}" alt="${product.name}" title="product" />
                                                <img class="hover blur-up lazyload" src="${product.image[1]}" alt="${product.name}" title="product" />
                                            </a>
                                        </div>
                                        <div class="product-details text-center">
                                            <div class="product-name">
                                                <a href="">${product.name}</a>
                                            </div>
                                            <div class="product-price">
                                                <span class="price">${product.price}</span>
                                            </div>
                                        </div>
                                    </div>
                                `;
                            });
    
                            // Update pagination links if totalPages > 1
                            paginationContainer.innerHTML = '';
                            if (totalPages > 1) {
                                paginationContainer.innerHTML = `
                                    <div class="infinitpaginOuter" style="display: flex; justify-content: center;">
                                        <div class="infinitpagin">    
                                            <ul class="pagination">
                                                ${Array.from({ length: totalPages }, (_, i) => `
                                                    <li class="btn-dark page-item ${i + 1 === currentPage ? 'active' : ''}" style="background-color: aliceblue;">
                                                        <a class="page-link2" style="margin: 2px;" 
                                                            data-category="${categoryData}" 
                                                            data-page="${i + 1}" 
                                                            data-min-Value="${minValue}" 
                                                            data-max-Value="${maxValue}" 
                                                            data-search-Term="${searchTerm}">
                                                            <p style="font-size: 15px; color: black;">${i + 1}</p>
                                                        </a>
                                                    </li>`).join('')
                                                }
                                            </ul>
                                        </div>
                                    </div>`;
                            }



                            const paginationLinks = document.querySelectorAll('.page-link2');
                paginationLinks.forEach(link => {
                    link.addEventListener('click', async function(event) {
                        event.preventDefault(); // Prevent default link behavior
    
                        const categoryData = this.dataset.category;
                        const page = this.dataset.page;
                        const minValue = this.dataset.minValue;
                        const maxValue = this.dataset.maxValue;
                        const searchTerm = this.dataset.searchTerm;

                        console.log(categoryData, page, minValue, maxValue, searchTerm );// categoryData, page,  consoled rest of its undefined why
    
                        try {
                            const response = await fetch(`/category/fetch/${categoryData}`, {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                                body: JSON.stringify({ page, minValue, maxValue, searchTerm }),
                            });
                            if (!response.ok) {
                                throw new Error(`HTTP error! Status: ${response.status}`);
                            }
                            // Process the response data
                            const responseData = await response.json();
                            const { sortedProducts, totalPages, currentPage } = responseData;
    
                            productListContainer.innerHTML = ''; // Clear existing products
                            sortedProducts.forEach(product => {
                                productListContainer.innerHTML += `
                                    <div class="col-6 col-sm-6 col-md-4 col-lg-3 item">
                                        <div class="product-image">
                                            <a href="/productdetails/${product._id}">
                                                <img class="primary blur-up lazyload" src="${product.image[0]}" alt="${product.name}" title="product" />
                                                <img class="hover blur-up lazyload" src="${product.image[1]}" alt="${product.name}" title="product" />
                                            </a>
                                        </div>
                                        <div class="product-details text-center">
                                            <div class="product-name">
                                                <a href="">${product.name}</a>
                                            </div>
                                            <div class="product-price">
                                                <span class="price">${product.price}</span>
                                            </div>
                                        </div>
                                    </div>
                                `;
                            });
    
                            // Update pagination links if totalPages > 1
                            paginationContainer.innerHTML = '';
                            if (totalPages > 1) {
                                paginationContainer.innerHTML = `
                                    <div class="infinitpaginOuter" style="display: flex; justify-content: center;">
                                        <div class="infinitpagin">    
                                            <ul class="pagination">
                                                ${Array.from({ length: totalPages }, (_, i) => `
                                                    <li class="btn-dark page-item ${i + 1 === currentPage ? 'active' : ''}" style="background-color: aliceblue;">
                                                        <a class="page-link2" style="margin: 2px;" 
                                                            data-category="${categoryData}" 
                                                            data-page="${i + 1}" 
                                                            data-min-Value="${minValue}" 
                                                            data-max-Value="${maxValue}" 
                                                            data-search-Term="${searchTerm}">
                                                            <p style="font-size: 15px; color: black;">${i + 1}</p>
                                                        </a>
                                                    </li>`).join('')
                                                }
                                            </ul>
                                        </div>
                                    </div>`;
                            }


                            const paginationLinks = document.querySelectorAll('.page-link2');
                paginationLinks.forEach(link => {
                    link.addEventListener('click', async function(event) {
                        event.preventDefault(); // Prevent default link behavior
    
                        const categoryData = this.dataset.category;
                        const page = this.dataset.page;
                        const minValue = this.dataset.minValue;
                        const maxValue = this.dataset.maxValue;
                        const searchTerm = this.dataset.searchTerm;

                        console.log(categoryData, page, minValue, maxValue, searchTerm );// categoryData, page,  consoled rest of its undefined why
    
                        try {
                            const response = await fetch(`/category/fetch/${categoryData}`, {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                                body: JSON.stringify({ page, minValue, maxValue, searchTerm }),
                            });
                            if (!response.ok) {
                                throw new Error(`HTTP error! Status: ${response.status}`);
                            }
                            // Process the response data
                            const responseData = await response.json();
                            const { sortedProducts, totalPages, currentPage } = responseData;
    
                            productListContainer.innerHTML = ''; // Clear existing products
                            sortedProducts.forEach(product => {
                                productListContainer.innerHTML += `
                                    <div class="col-6 col-sm-6 col-md-4 col-lg-3 item">
                                        <div class="product-image">
                                            <a href="/productdetails/${product._id}">
                                                <img class="primary blur-up lazyload" src="${product.image[0]}" alt="${product.name}" title="product" />
                                                <img class="hover blur-up lazyload" src="${product.image[1]}" alt="${product.name}" title="product" />
                                            </a>
                                        </div>
                                        <div class="product-details text-center">
                                            <div class="product-name">
                                                <a href="">${product.name}</a>
                                            </div>
                                            <div class="product-price">
                                                <span class="price">${product.price}</span>
                                            </div>
                                        </div>
                                    </div>
                                `;
                            });
    
                            // Update pagination links if totalPages > 1
                            paginationContainer.innerHTML = '';
                            if (totalPages > 1) {
                                paginationContainer.innerHTML = `
                                    <div class="infinitpaginOuter" style="display: flex; justify-content: center;">
                                        <div class="infinitpagin">    
                                            <ul class="pagination">
                                                ${Array.from({ length: totalPages }, (_, i) => `
                                                    <li class="btn-dark page-item ${i + 1 === currentPage ? 'active' : ''}" style="background-color: aliceblue;">
                                                        <a class="page-link2" style="margin: 2px;" 
                                                            data-category="${categoryData}" 
                                                            data-page="${i + 1}" 
                                                            data-min-Value="${minValue}" 
                                                            data-max-Value="${maxValue}" 
                                                            data-search-Term="${searchTerm}">
                                                            <p style="font-size: 15px; color: black;">${i + 1}</p>
                                                        </a>
                                                    </li>`).join('')
                                                }
                                            </ul>
                                        </div>
                                    </div>`;
                            }




                             const paginationLinks = document.querySelectorAll('.page-link2');
                paginationLinks.forEach(link => {
                    link.addEventListener('click', async function(event) {
                        event.preventDefault(); // Prevent default link behavior
    
                        const categoryData = this.dataset.category;
                        const page = this.dataset.page;
                        const minValue = this.dataset.minValue;
                        const maxValue = this.dataset.maxValue;
                        const searchTerm = this.dataset.searchTerm;

                        console.log(categoryData, page, minValue, maxValue, searchTerm );// categoryData, page,  consoled rest of its undefined why
    
                        try {
                            const response = await fetch(`/category/fetch/${categoryData}`, {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                                body: JSON.stringify({ page, minValue, maxValue, searchTerm }),
                            });
                            if (!response.ok) {
                                throw new Error(`HTTP error! Status: ${response.status}`);
                            }
                            // Process the response data
                            const responseData = await response.json();
                            const { sortedProducts, totalPages, currentPage } = responseData;
    
                            productListContainer.innerHTML = ''; // Clear existing products
                            sortedProducts.forEach(product => {
                                productListContainer.innerHTML += `
                                    <div class="col-6 col-sm-6 col-md-4 col-lg-3 item">
                                        <div class="product-image">
                                            <a href="/productdetails/${product._id}">
                                                <img class="primary blur-up lazyload" src="${product.image[0]}" alt="${product.name}" title="product" />
                                                <img class="hover blur-up lazyload" src="${product.image[1]}" alt="${product.name}" title="product" />
                                            </a>
                                        </div>
                                        <div class="product-details text-center">
                                            <div class="product-name">
                                                <a href="">${product.name}</a>
                                            </div>
                                            <div class="product-price">
                                                <span class="price">${product.price}</span>
                                            </div>
                                        </div>
                                    </div>
                                `;
                            });
    
                            // Update pagination links if totalPages > 1
                            paginationContainer.innerHTML = '';
                            if (totalPages > 1) {
                                paginationContainer.innerHTML = `
                                    <div class="infinitpaginOuter" style="display: flex; justify-content: center;">
                                        <div class="infinitpagin">    
                                            <ul class="pagination">
                                                ${Array.from({ length: totalPages }, (_, i) => `
                                                    <li class="btn-dark page-item ${i + 1 === currentPage ? 'active' : ''}" style="background-color: aliceblue;">
                                                        <a class="page-link2" style="margin: 2px;" 
                                                            data-category="${categoryData}" 
                                                            data-page="${i + 1}" 
                                                            data-min-Value="${minValue}" 
                                                            data-max-Value="${maxValue}" 
                                                            data-search-Term="${searchTerm}">
                                                            <p style="font-size: 15px; color: black;">${i + 1}</p>
                                                        </a>
                                                    </li>`).join('')
                                                }
                                            </ul>
                                        </div>
                                    </div>`;
                            }




                            const paginationLinks = document.querySelectorAll('.page-link2');
                paginationLinks.forEach(link => {
                    link.addEventListener('click', async function(event) {
                        event.preventDefault(); // Prevent default link behavior
    
                        const categoryData = this.dataset.category;
                        const page = this.dataset.page;
                        const minValue = this.dataset.minValue;
                        const maxValue = this.dataset.maxValue;
                        const searchTerm = this.dataset.searchTerm;

                        console.log(categoryData, page, minValue, maxValue, searchTerm );// categoryData, page,  consoled rest of its undefined why
    
                        try {
                            const response = await fetch(`/category/fetch/${categoryData}`, {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                                body: JSON.stringify({ page, minValue, maxValue, searchTerm }),
                            });
                            if (!response.ok) {
                                throw new Error(`HTTP error! Status: ${response.status}`);
                            }
                            // Process the response data
                            const responseData = await response.json();
                            const { sortedProducts, totalPages, currentPage } = responseData;
    
                            productListContainer.innerHTML = ''; // Clear existing products
                            sortedProducts.forEach(product => {
                                productListContainer.innerHTML += `
                                    <div class="col-6 col-sm-6 col-md-4 col-lg-3 item">
                                        <div class="product-image">
                                            <a href="/productdetails/${product._id}">
                                                <img class="primary blur-up lazyload" src="${product.image[0]}" alt="${product.name}" title="product" />
                                                <img class="hover blur-up lazyload" src="${product.image[1]}" alt="${product.name}" title="product" />
                                            </a>
                                        </div>
                                        <div class="product-details text-center">
                                            <div class="product-name">
                                                <a href="">${product.name}</a>
                                            </div>
                                            <div class="product-price">
                                                <span class="price">${product.price}</span>
                                            </div>
                                        </div>
                                    </div>
                                `;
                            });
    
                            // Update pagination links if totalPages > 1
                            paginationContainer.innerHTML = '';
                            if (totalPages > 1) {
                                paginationContainer.innerHTML = `
                                    <div class="infinitpaginOuter" style="display: flex; justify-content: center;">
                                        <div class="infinitpagin">    
                                            <ul class="pagination">
                                                ${Array.from({ length: totalPages }, (_, i) => `
                                                    <li class="btn-dark page-item ${i + 1 === currentPage ? 'active' : ''}" style="background-color: aliceblue;">
                                                        <a class="page-link2" style="margin: 2px;" 
                                                            data-category="${categoryData}" 
                                                            data-page="${i + 1}" 
                                                            data-min-Value="${minValue}" 
                                                            data-max-Value="${maxValue}" 
                                                            data-search-Term="${searchTerm}">
                                                            <p style="font-size: 15px; color: black;">${i + 1}</p>
                                                        </a>
                                                    </li>`).join('')
                                                }
                                            </ul>
                                        </div>
                                    </div>`;
                            }




                        } catch (error) {
                            console.error('Error:', error);
                        }
                    });
                });







                        } catch (error) {
                            console.error('Error:', error);
                        }
                    });
                });


                        } catch (error) {
                            console.error('Error:', error);
                        }
                    });
                });


                //end forth
                        } catch (error) {
                            console.error('Error:', error);
                        }
                    });
                });








                //end third
                        } catch (error) {
                            console.error('Error:', error);
                        }
                    });
                });


                //end second
            } catch (error) {
                console.error('Error:', error);
            }
        };
    });
    </script> 

  




<!-- search filter  by name-->
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const searchInput = document.getElementById('search-value');
        const searchButton = document.getElementById('search-btn');
        searchButton.addEventListener('click', function () {                       
            const searchTerm = searchInput.value.trim();                            
            const value = document.getElementById('amount').value.trim();
            console.log(464,'gfh')
            fetchData('/category/<%=categoryName%>/searchProduct',  {searchTerm ,value });   
        });
        const fetchData = async (url,  value ) => {
            try {
                const response = await fetch(url, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify( value ),
                });
                if (!response.ok) {
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }
                const searchProducts = await response.json();
                const searchProductsArray = searchProducts.searchProducts;
                const {  totalPages, currentPage, categoryData, minValue, maxValue, searchTerm } =searchProducts

                const productListContainer = document.getElementById('orginalList');
                productListContainer.innerHTML = ''; 
                const paginationContainer = document.getElementById('orginalPagination')
                searchProductsArray.forEach(product => {
                    console.log(product.image[0]);
                    productListContainer.innerHTML +=  
                        `  
                        <div class="col-6 col-sm-6 col-md-4 col-lg-3 item">
                            <div class="product-image">
                                <a href="/productdetails/${product._id}">
                                    <img class="primary blur-up lazyload"  data-src="${product.image[0]}"    src="${product.image[0]}" alt="image" title="product" />
                                    <img class="hover blur-up lazyload"  data-src="${product.image[1]}"    src="${product.image[1]}" alt="image" title="product" />
                                </a>
                            </div>
                            <div class="product-details text-center">
                                <div class="product-name">
                                    <a href="">${product.name}</a>
                                </div>
                                <div class="product-price">
                                    <span class="price">${product.price}</span>
                                </div>
                            </div>
                        </div>
                    `
                });

                paginationContainer.innerHTML = '';
                if (totalPages > 1) {
                                paginationContainer.innerHTML = `
                                    <div class="infinitpaginOuter" style="display: flex; justify-content: center;">
                                        <div class="infinitpagin">    
                                            <ul class="pagination">
                                                ${Array.from({ length: totalPages }, (_, i) => `
                                                    <li class="btn-dark page-item ${i + 1 === currentPage ? 'active' : ''}" style="background-color: aliceblue;">
                                                        <a class="page-link2" style="margin: 2px;"
                                                            data-category="${categoryData}" 
                                                            data-page="${i + 1}" 
                                                            data-min-Value="${minValue}" 
                                                            data-max-Value="${maxValue}" 
                                                            data-search-Term="${searchTerm}">
                                                            <p style="font-size: 15px; color: black;">${i + 1}</p>
                                                        </a>
                                                    </li>`).join('')
                                                }
                                            </ul>
                                        </div>
                                    </div>`;
                            }

                            const paginationLinks = document.querySelectorAll('.page-link2');
                paginationLinks.forEach(link => {
                    link.addEventListener('click', async function(event) {
                        event.preventDefault(); // Prevent default link behavior
    
                        const categoryData = this.dataset.category;
                        const page = this.dataset.page;
                        const minValue = this.dataset.minValue;
                        const maxValue = this.dataset.maxValue;
                        const searchTerm = this.dataset.searchTerm;

                        console.log(categoryData, page, minValue, maxValue, searchTerm );// categoryData, page,  consoled rest of its undefined why
    
                        try {
                            const response = await fetch(`/category/fetch/${categoryData}`, {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                                body: JSON.stringify({ page, minValue, maxValue, searchTerm }),
                            });
                            if (!response.ok) {
                                throw new Error(`HTTP error! Status: ${response.status}`);
                            }
                            // Process the response data
                            const responseData = await response.json();
                            const { sortedProducts, totalPages, currentPage } = responseData;
    
                            productListContainer.innerHTML = ''; // Clear existing products
                            sortedProducts.forEach(product => {
                                productListContainer.innerHTML += `
                                    <div class="col-6 col-sm-6 col-md-4 col-lg-3 item">
                                        <div class="product-image">
                                            <a href="/productdetails/${product._id}">
                                                <img class="primary blur-up lazyload" src="${product.image[0]}" alt="${product.name}" title="product" />
                                                <img class="hover blur-up lazyload" src="${product.image[1]}" alt="${product.name}" title="product" />
                                            </a>
                                        </div>
                                        <div class="product-details text-center">
                                            <div class="product-name">
                                                <a href="">${product.name}</a>
                                            </div>
                                            <div class="product-price">
                                                <span class="price">${product.price}</span>
                                            </div>
                                        </div>
                                    </div>
                                `;
                            });
    
                            // Update pagination links if totalPages > 1
                            paginationContainer.innerHTML = '';
                            if (totalPages > 1) {
                                paginationContainer.innerHTML = `
                                    <div class="infinitpaginOuter" style="display: flex; justify-content: center;">
                                        <div class="infinitpagin">    
                                            <ul class="pagination">
                                                ${Array.from({ length: totalPages }, (_, i) => `
                                                    <li class="btn-dark page-item ${i + 1 === currentPage ? 'active' : ''}" style="background-color: aliceblue;">
                                                        <a class="page-link2" style="margin: 2px;" 
                                                            data-category="${categoryData}" 
                                                            data-page="${i + 1}" 
                                                            data-min-Value="${minValue}" 
                                                            data-max-Value="${maxValue}" 
                                                            data-search-Term="${searchTerm}">
                                                            <p style="font-size: 15px; color: black;">${i + 1}</p>
                                                        </a>
                                                    </li>`).join('')
                                                }
                                            </ul>
                                        </div>
                                    </div>`;
                            }



                            
                        } catch (error) {
                            console.error('Error:', error);
                        }
                    });
                });


            } catch (error) {
                console.error('Error:', error);
            }

        };

    });
</script>

<!-- fetch  -->
<script>
document.addEventListener('DOMContentLoaded', function() {
    const paginationLinks = document.querySelectorAll('.page-link2');
    console.log(67);
    paginationLinks.forEach(link => {
        link.addEventListener('click', async function(event) {
            event.preventDefault(); // Prevent default link behavior

            const categoryData = this.dataset.category;
            const page = this.dataset.page;
            const minValue = this.dataset.minValue;
            const maxValue = this.dataset.maxValue;
            const searchTerm = this.dataset.searchTerm;

            try {
                const response = await fetch(`/category/fetch/${categoryData}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ page, minValue, maxValue, searchTerm }),
                });

                if (!response.ok) {
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }

                // Process the response data
                const responseData = await response.json();
                const { sortedProducts, totalPages, currentPage } = responseData;

                const productListContainer = document.getElementById('orginalList');
                productListContainer.innerHTML = ''; // Clear existing products

                sortedProducts.forEach(product => {
                    productListContainer.innerHTML += `
                        <div class="col-6 col-sm-6 col-md-4 col-lg-3 item">
                            <div class="product-image">
                                <a href="/productdetails/${product._id}">
                                    <img class="primary blur-up lazyload" src="${product.image[0]}" alt="${product.name}" title="product" />
                                    <img class="hover blur-up lazyload" src="${product.image[1]}" alt="${product.name}" title="product" />
                                </a>
                            </div>
                            <div class="product-details text-center">
                                <div class="product-name">
                                    <a href="">${product.name}</a>
                                </div>
                                <div class="product-price">
                                    <span class="price">${product.price}</span>
                                </div>
                            </div>
                        </div>
                    `;
                });

                // Update pagination links if totalPages > 1
                const paginationContainer = document.getElementById('orginalPagination');
                paginationContainer.innerHTML = '';
                if (totalPages > 1) {
                    paginationContainer.innerHTML = `
                        <div class="infinitpaginOuter" style="display: flex; justify-content: center;">
                            <div class="infinitpagin">    
                                <ul class="pagination">
                                    ${Array.from({ length: totalPages }, (_, i) => `
                                        <li class="btn-dark page-item ${i + 1 === currentPage ? 'active' : ''}" style="background-color: aliceblue;">
                                            <a class="page-link2" style="margin: 2px;" 
                                                data-category="${categoryData}" 
                                                data-page="${i + 1}" 
                                                data-minValue="${minValue}" 
                                                data-maxValue="${maxValue}" 
                                                data-searchTerm="${searchTerm}">
                                                <p style="font-size: 15px; color: black;">${i + 1}</p>
                                            </a>
                                        </li>`).join('')
                                    }
                                </ul>
                            </div>
                        </div>
                    `;
                }
            } catch (error) {
                console.error('Error:', error);
            }
        });
    });
});
</script>


<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

<%-include('footer')-%>
    </body>
    </html>