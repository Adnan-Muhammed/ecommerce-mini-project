<%- include('header') -%>

<!--Body Content-->
<div id="page-content">
    <!--Page Title-->
    <div class="page section-header text-center">
        <div class="page-title">
            <div class="wrapper">
                <h1 class="page-width">My Order List</h1>
            </div>
        </div>
    </div>
    <!--End Page Title-->
    <div class="container">
        <div class="row">
            <div class="col-12 col-sm-12 col-md-12 col-lg-12 main-col">
                <% if(locals.orderList.length > 0) { %>
                <div class="alert alert-success text-uppercase" role="alert">
                    <i class="icon anm anm-truck-l icon-large"></i> &nbsp;<strong>Congratulations!</strong> You've got free shipping!
                </div>

                <!-- <form action="#" method="post" class="cart style2"> -->
                <table class="table table-striped">
                    <thead class="cart__row cart__header  text-white" style="background-color: cadetblue;">
                        <tr>
                            <th class="text-center">Billing Address</th>
                            <th class="text-center">Quantity</th>
                            <th style="background-color: blueviolet;" class="text-right">Price</th>
                            <th style="background-color:darkgoldenrod;" class="text-center">Status</th>
                            <th style="background-color: chocolate;" class="text-center">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% locals.orderList.forEach(order => { %>
                        <tr class="cart__row border-bottom line1 cart-flex border-top">
                            <td style="text-align: center;" class="cart__price-wrapper cart-flex-item">
                                <div>
                                    <strong>Name:</strong> <%= order.billingAddress.name %><br>
                                    <strong>Phone:</strong> <%= order.billingAddress.telephone %><br>
                                    <strong>Address:</strong> <%= order.billingAddress.address %><br>
                                    <strong>City:</strong> <%= order.billingAddress.city %><br>
                                    <strong>Region/State:</strong> <%= order.billingAddress.regionState %><br>
                                    <strong>Postcode:</strong> <%= order.billingAddress.postCode %><br>
                                </div>
                            </td>
                            <td style="text-align: center;" class="cart__price-wrapper cart-flex-item">

                                <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal<%= order._id %>">
                                    Order Details
                                </button>
                            </td>
                            <td style="background-color: blueviolet;" class="text-right small--hide cart-price">
                                <div id="productPrice" value="<%= order.grandTotal %>" data-product-id="<%= order._id %>">
                                    <span class="money">$<%= order.grandTotal %></span>
                                </div>
                            </td>
                            <td class="text-center small--hide cart-price">
                                <div style="text-align: center;" class="list-view-item__title">
                                    <!-- <span> -->
                                        <h4>
                                            <%= order.orderStatus.type %>
                                        </h4>
                                    <!-- </span> -->
                                </div>
                            </td>
                            <!-- <td class="text-center small--hide cart-price">
                                <button class="btn btn-info cancelled-btn" data-order-id="<%= order.id %>">Cancelled</button>
                            </td> -->

                                <!-- Only display the Cancelled button if the order status is not already "cancelled" -->
                                <td class="text-center small--hide cart-price">
                                    <% if (order.orderStatus.type === "delivered") { %>
                                        <!-- Show Return button -->
                                        <button class="btn btn-warning return-btn" data-order-id="<%= order.id %>" data-order-status="returned">Return</button>
                                    <% } else if (order.orderStatus.type !== "cancelled" && order.orderStatus.type !== "returned"  ) { %>
                                        <!-- Show Cancelled button -->
                                        <button class="btn btn-info cancelled-btn" data-order-id="<%= order.id %>" data-order-status="cancelled">Cancelled</button>
                                    <% } %>
                                </td>
                                
                        </tr>
                        <!-- Button trigger modal -->




                        <!-- Modal -->
                        <div class="modal fade" id="exampleModal<%= order._id %>" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="exampleModalLabel">Order Details</h5>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body">
                                        <div class="card-body p-4" style="max-height: 400px; overflow-y: auto;">
                                            <% order.orderItems.forEach(item => { %>
                                            <div class="d-flex flex-row mb-4 pb-2 border-bottom">
                                                <div class="flex-fill">
                                                    <strong>Product ID:</strong> <%= item.productId %><br>
                                                    <h6 class="fw-bold">Product Name: <%= item.productName %></h6>
                                                    <p class="fw-bold">Quantity: <%= item.quantity %></p>
                                                    <h6 class="mb-0">Unit Price: ₹<%= item.unitPrice %> <span class="small text-muted"></span></h6>
                                                    <h6 class="mb-0">Total Price: ₹<%= item.price %> <span class="small text-muted"></span></h6>
                                                </div>
                                                <div class="ml-3">
                                                    <img class="img-fluid" src="<%= item.images[0] %>" width="90" height="70">
                                                </div>
                                            </div>
                                            <% }); %>
                                        </div>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <% }); %>
                    </tbody>
                </table>
                <% } else { %>
                <h1>No order products</h1>
                <p><a href="/" class="btn btn--has-icon-after" style="background-color: black; color: aliceblue;">Continue shopping <i class="fa fa-caret-right" aria-hidden="true"></i></a></p>
                <% } %>
                <!-- </form> -->
            </div>
            <h1></h1>
        </div>
    </div>
</div>
<!--End Body Content-->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">

<!-- jQuery (required for SweetAlert) -->
<!-- <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script> -->

<!-- SweetAlert JS -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


<%- include('footer') -%>

<!-- <script>
    $(document).ready(function() {
        // Event handler for Cancelled button click
        $('.cancelled-btn').click(function() {
            // Get the order ID from the data attribute
            var orderId = $(this).data('order-id');
            var orderStatus = $(this).data('order-status')

            console.log(orderStatus);
            console.log(111);
            // Show SweetAlert confirmation dialog
            Swal.fire({
                title: 'Are you sure?',
                text: 'You are about to cancel this order!',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes, cancel it!',
                cancelButtonText: 'No, keep it'
            }).then((result) => {
                // If the user clicks Confirm
                if (result.isConfirmed) {
                    // Perform fetch GET request to cancel the order
                    fetch(`/cancelOrder/${orderId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                            // You can add more headers if needed
                        },
                            body: JSON.stringify({orderStatus})
                    })
                    .then(response => {
                        // Check if the response was successful (status code 200-299)
                        if (response.ok) {
                            return response.json(); // Parse the JSON data
                        } else {
                            throw new Error('Failed to cancel order'); // Throw an error if response is not OK
                        }
                    })
                    .then(data => {
                        // Handle the data received from the server (if any)
                        // For example, display a success message
                        Swal.fire('Cancelled!', 'Your order has been cancelled.', 'success')
                        .then(() => {
                            // Reload the page after successful cancellation
                            window.location.reload();
                        });
                    })
                    .catch(error => {
                        // Handle any errors that occurred during the fetch request
                        console.error('Error:', error);
                        // Display an error message to the user
                        Swal.fire('Error!', 'Failed to cancel order. Please try again later.', 'error');
                    });
                }
            });
        });
    });
</script> -->

<script>
$(document).ready(function() {
    // Event handler for Cancelled button click
    $('.cancelled-btn').click(function() {
        // Get the order ID from the data attribute
        var orderId = $(this).data('order-id');
        var orderStatus = $(this).data('order-status')

        console.log(orderStatus);
        console.log(111);
        // Show SweetAlert confirmation dialog
        Swal.fire({
            title: 'Are you sure?',
            text: 'You are about to cancel this order!',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, cancel it!',
            cancelButtonText: 'No, keep it'
        }).then((result) => {
            // If the user clicks Confirm
            if (result.isConfirmed) {
                // Perform fetch POST request to cancel the order
                fetch(`/cancelOrder/${orderId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                        // You can add more headers if needed
                    },
                    body: JSON.stringify({ orderStatus })
                })
                .then(response => {
                    // Check if the response was successful (status code 200-299)
                    if (response.ok) {
                        return response.json(); // Parse the JSON data
                    } else {
                        throw new Error('Failed to cancel order'); // Throw an error if response is not OK
                    }
                })
                .then(data => {
                    // Handle the data received from the server (if any)
                    // For example, display a success message
                    Swal.fire('Cancelled!', 'Your order has been cancelled.', 'success')
                    .then(() => {
                        // Reload the page after successful cancellation
                        window.location.reload();
                    });
                })
                .catch(error => {
                    // Handle any errors that occurred during the fetch request
                    console.error('Error:', error);
                    // Display an error message to the user
                    Swal.fire('Error!', 'Failed to cancel order. Please try again later.', 'error');
                });
            }
        });
    });

    // Event handler for Return button click
    $('.return-btn').click(function() {
        // Get the order ID from the data attribute
        var orderId = $(this).data('order-id');
        var orderStatus = $(this).data('order-status')

        console.log(orderStatus);
        console.log(111);
        // Show SweetAlert confirmation dialog
        Swal.fire({
            title: 'Are you sure?',
            text: 'You are about to return this order!',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, return it!',
            cancelButtonText: 'No, keep it'
        }).then((result) => {
            // If the user clicks Confirm
            if (result.isConfirmed) {
                // Perform fetch POST request to return the order
                fetch(`/returnOrder/${orderId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                        // You can add more headers if needed
                    },
                    body: JSON.stringify({ orderStatus })
                })
                .then(response => {
                    // Check if the response was successful (status code 200-299)
                    if (response.ok) {
                        return response.json(); // Parse the JSON data
                    } else {
                        throw new Error('Failed to return order'); // Throw an error if response is not OK
                    }
                })
                .then(data => {
                    // Handle the data received from the server (if any)
                    // For example, display a success message
                    Swal.fire('Returned!', 'Your order has been returned.', 'success')
                    .then(() => {
                        // Reload the page after successful return
                        window.location.reload();
                    });
                })
                .catch(error => {
                    // Handle any errors that occurred during the fetch request
                    console.error('Error:', error);
                    // Display an error message to the user
                    Swal.fire('Error!', 'Failed to return order. Please try again later.', 'error');
                });
            }
        });
    });
});
</script>





</body>

</html>
