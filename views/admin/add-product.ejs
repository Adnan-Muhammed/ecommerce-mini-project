


<!-- Cropper.js CSS -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" rel="stylesheet">

<!-- Cropper.js JavaScript -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>

<%-include('header')-%>

<!-- Cropper.js CSS -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" rel="stylesheet">

<!-- Cropper.js JavaScript -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>



    <!-- Form Start -->


    <div class="container-fluid pt-4 px-4">
      <div class="row g-4">





          <div class="col-sm-12 col-xl-6">
              <div class="bg-light rounded h-100 p-4">
                  <h6 class="mb-4">Add Product</h6>
                
                  <form action="/admin/productadded" method="post" enctype="multipart/form-data">

                      <div class="form-floating mb-3">
                        <input type="text" class="form-control" id="productName" placeholder="productname" name="productName">
                        <label for="floatingInput">Product Name</label>
                        <div id="productNameError" class="error" style="color: red;"></div>
                      </div>
                  
                      <div class="form-floating mb-3">
                        <input type="number" class="form-control" id="productStock" placeholder="productquantity" name="productStock"
                        min="1" >
                        <label for="floatingInput">Stock</label>
                        <div id="productStockError" class="error" style="color: red;"></div>
                      </div>
                  
                      <div class="form-floating mb-3">
                        <input type="number" class="form-control" id="productPrice" placeholder="productPrice" name="productPrice"
                        min="1">
                        <label for="productPrice">Price</label>
                        <div id="productPriceError" class="error" style="color: red;"></div>
                      </div>
                  
                      <!-- here  -->

                      

                       <!-- Offer Input (optional) -->
                       <div class="form-floating mb-3" id="offerInputSection" >
                        <input type="number" class="form-control" id="offerInput" placeholder="offerInput" name="offerInput" min="1" max="100"  >
                        <label for="offerInput">Offer</label>
                        <div id="offerInputError" class="error" style="color: red;"></div>
                      </div>
                      
                      <!-- Expiry Date for Offer (optional) -->
                      <div class="form-floating mb-3" id="expiryDateSection" >
                        <input type="date" class="form-control" id="offerExpiryDate" placeholder="offerExpiryDate" name="offerExpiryDate">
                        <label for="offerExpiryDate">Offer Expiry Date</label>
                        <div id="offerExpiryDateError" class="error" style="color: red;"></div>
                      </div>
                  

                          <% if (locals.categoryList) { %>
                            <div class="form-floating mb-3">
                                <select class="form-select" name="productCategory" id="floatingSelect" aria-label="Floating label select example">
                                    <% categoryList.forEach(category => { %>
                                    <option value="<%= category._id %>">
                                        <%= category.name %>
                                    </option>
                                    <% }); %>
                                  </select>
                                  <label for="floatingSelect">Select Category</label>
                                </div>
                                <% } %>
                                



                      <div class="mb-3">
                        <label for="formFileMultiple" class="form-label">Multiple files input example (Max 4 files)</label>
                        <!-- <input class="form-control" type="file" name="images" id="formFileMultiple" multiple> -->

                        <input class="form-control" type="file" name="images" id="formFileMultiple" multiple onchange="handleFileSelect(event)">

                        <p id="imageError" class="error" style="color: red;"></p>
                      </div>



                      
                      
                      
                      <div class="form-floating">
                        <textarea name="productDescription" class="form-control" placeholder="Leave a comment here" id="floatingTextarea"
                        style="height: 150px;"></textarea>
                        <label for="floatingTextarea">Description</label>
                        <div id="productDescriptionError" class="error" style="color: red;"></div>
                      </div>
                      <button type="submit" class="btn btn-primary">Submit</button>
                    </form>
                    
                    
              </div>
          </div>




          <div class="col-sm-12 col-xl-6">
            <div class="bg-light rounded h-100 p-4">

    <canvas id="croppedImage" style="max-width:100%;"></canvas>
               
                  
                  
            </div>
        </div>






      </div>


      
      
  </div>
    <!-- Form End -->


    <script>
      function handleFileSelect(event) {
          const files = event.target.files;
          if (files && files[0]) {
              const cropper = new Cropper('#croppedImage', {
                  aspectRatio: 1 / 1, // Aspect ratio for cropping
                  viewMode: 1, // Adjust the view mode as needed
                  autoCropArea: 1, // Adjust the auto crop area as needed
                  ready: function() {
                      // Do something when Cropper is ready
                  },
              });
              const reader = new FileReader();
              reader.onload = function(event) {
                  cropper.replace(event.target.result);
              };
              reader.readAsDataURL(files[0]);
          }
      }
    </script>
    










    </div>
   
    <a href="#" class="btn btn-lg btn-primary btn-lg-square back-to-top"><i class="bi bi-arrow-up"></i></a>
    </div>

    
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>



  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const form = document.querySelector('form[action="/admin/productadded"]');
  
      form.addEventListener('submit', function (event) {
        let valid = true;
  
        // Reset previous error messages
        const errorFields = form.querySelectorAll('.error');
        errorFields.forEach(function (error) {
          error.textContent = '';
        });
  
        // Validate Product Name
        const productName = form.querySelector('input[name="productName"]').value.trim();
        if (productName === '') {
          valid = false;
          displayError('Product Name is required.', 'productNameError');
        }
  
        // Validate Stock
        const productStock = form.querySelector('input[name="productStock"]').value.trim();
        if (productStock === '') {
          valid = false;
          displayError('Stock is required.', 'productStockError');
        }
  
        // Validate Price
        const productPrice = form.querySelector('input[name="productPrice"]').value.trim();
        if (productPrice === '') {
          valid = false;
          displayError('Price is required.', 'productPriceError');
        }
  
        // Validate Description
        const productDescription = form.querySelector('textarea[name="productDescription"]').value.trim();
        if (productDescription === '') {
          valid = false;
          displayError('Description is required.', 'productDescriptionError');
        }
  
        // Validate Image Upload
        const images = form.querySelector('input[name="images"]');
        const imageFiles = images.files;
  
        if (imageFiles.length > 6) {
          valid = false;
          displayError('Maximum of 6 files allowed.', 'imageError');
        } else {
          for (let i = 0; i < imageFiles.length; i++) {
            const file = imageFiles[i];
            const fileType = file.type;
  
            if (!fileType.startsWith('image/')) {
              valid = false;
              displayError('Invalid file type. Please upload only images.', 'imageError');
              break;
            }
          }
        }
  
        if (imageFiles.length === 0) {
          valid = false;
          displayError('Image(s) are required.', 'imageError');
        }
  
        // Validate Offer Input
        const offerInput = form.querySelector('input[name="offerInput"]').value.trim();
        if (offerInput && !(/^\d+$/.test(offerInput))) {
          valid = false;
          displayError('Offer input must be a number.', 'offerInputError');
        }
        



  
        // Validate Expiry Date
        const expiryDate = form.querySelector('input[name="offerExpiryDate"]').value.trim();


        


        const offerInputValue = offerInput.trim();
        if (offerInputValue !== '' && expiryDate === '') {
          valid = false;
          displayError('Expiry date is required if an offer is provided.', 'offerExpiryDateError');
        }

        if (offerInputValue === '' && expiryDate !== '') {
          valid = false;
          displayError('offer input is empty.', 'offerExpiryDateError');
        }
  
        if (!valid) {
          event.preventDefault(); // Prevent form submission if validation fails
        }
      });
  
      function displayError(message, errorFieldId) {
        const errorField = document.getElementById(errorFieldId);
        errorField.textContent = message;
      }


      flatpickr('#offerExpiryDate', {
       dateFormat: "d/m/Y", // Format: dd/mm/yyyy
       minDate: "today" // Set minimum date to today
   });

    });
  </script>
  














<script>
  function handleFileSelect(event) {
      const files = event.target.files;
      const cropper = new Cropper('#croppedImage', {
          aspectRatio: 1 / 1, // You can adjust the aspect ratio as per your requirements
          viewMode: 1, // Adjust the view mode as needed
          autoCropArea: 1, // Adjust the auto crop area as needed
          ready: function() {
              // Do something when Cropper is ready
          },
      });

      if (files && files[0]) {
          const reader = new FileReader();
          reader.onload = function(event) {
              cropper.replace(event.target.result);
          };
          reader.readAsDataURL(files[0]);
      }
  }
</script>


<script>
  function handleFileSelect(event) {
      const files = event.target.files;
      if (files && files[0]) {
          const cropper = new Cropper('#croppedImage', {
              aspectRatio: 1 / 1,
              viewMode: 1,
              autoCropArea: 1,
              ready: function() {
                  // Do something when Cropper is ready
              },
          });
          const reader = new FileReader();
          reader.onload = function(event) {
              cropper.replace(event.target.result);
          };
          reader.readAsDataURL(files[0]);
      }
  }
</script>











    <%-include('footer')-%>