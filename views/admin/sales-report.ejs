<%- include('header') -%>

<!-- Add DataTables CSS -->
<link
  rel="stylesheet"
  type="text/css"
  href="https://cdn.datatables.net/1.13.7/css/jquery.dataTables.min.css"
/>
<link
  rel="stylesheet"
  href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css"
/>
<!-- Select2 CSS -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>

<link
  href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/css/select2.min.css"
  rel="stylesheet"
/>

<!-- jQuery (required) -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

<!-- Select2 JS -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.min.js"></script>

<!-- DataTable HEADER-->
<link
  rel="stylesheet"
  href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/5.3.0/css/bootstrap.min.css"
/>
<link
  rel="stylesheet"
  href="https://cdn.datatables.net/1.13.7/css/dataTables.bootstrap5.min.css"
/>

<!-- Table Start -->
<div class="container-fluid pt-4 px-4">
  <div class="row g-4">
    <div>
      <div class="m-0" style="display: inline-block">
        <label for="startDate">Start Date:</label>
        <input
          class="startDatePicker"
          type="text"
          id="startDate"
          name="startDate"
        />

        <label for="endDate">End Date:</label>
        <input class="endDatePicker" type="text" id="endDate" name="endDate" />

        <button
          id="filterByDate"
          type="submit"
          style="
            background-color: #007bff;
            color: white;
            border-radius: 12px;
            margin-left: 2px;
            border: 1px solid black;
          "
        >
          Submit
        </button>

        <div style="display: flex; justify-content: space-around">
          <span
            class="startDateError"
            style="text-align: center; color: red"
          ></span>
          <span
            class="endDateError"
            style="text-align: center; color: red"
          ></span>
        </div>
      </div>

      <div class="m-0" style="padding: 10px">
        <!-- Dropdown for Monthly Filtering -->
        <!-- <label for="month">Select Month:</label> -->
        <select id="month" name="month">
          <!-- <option >month</option> -->

          <option value="1">January</option>
          <option value="2">February</option>
          <option value="3">March</option>
          <option value="4">April</option>
          <option value="5">May</option>
          <option value="6">June</option>
          <option value="7">July</option>
          <option value="8">August</option>
          <option value="9">September</option>
          <option value="10">October</option>
          <option value="11">November</option>
          <option value="12">December</option>
        </select>
        <button
          type="submit"
          id="filterByMonth"
          style="
            background-color: #007bff;
            color: white;
            border-radius: 12px;
            margin-left: 2px;
            border: 1px solid black;
          "
        >
          Submit
        </button>

        <!-- Dropdown for Year Filtering -->
        <!-- <label for="yearFilter">Select Year:</label> -->
        <select id="yearFilter" name="year">
          <!-- <option >year</option> -->

          <option value="2024">2024</option>
          <option value="2023">2023</option>
          <option value="2022">2022</option>
          <option value="2021">2021</option>
          <!-- Assuming you want years from 2020 to 2030 -->
        </select>

        <button
          type="submit"
          id="filterByYear"
          style="
            background-color: #007bff;
            color: white;
            border-radius: 12px;
            margin-left: 2px;
            border: 1px solid black;
          "
        >
          Submit
        </button>
      </div>

      <!-- Add any additional form elements here -->
    </div>

    <div class="bg-light rounded h-100 p-4">
      <h6 class="mb-4">Sales Report</h6>

      <div class="d-flex justify-content-between">
        <div class="mb-2">
          <button onclick="downloadPDF()" class="btn btn-sm btn-primary">
            Download PDF
          </button>
          <button onclick="downloadExcel()" class="btn btn-sm btn-primary">
            Download Excel
          </button>
        </div>
        <div class="mb-2 ">
          <button class="btn btn-sm text-primary" style="background-color: transparent; border: none;">
            nb: grand total includes tax and delivery Charge
          </button>
          
        </div>
      </div>
      





      <div class="table-responsive">
        <table id="my-table" class="table table-bordered">
          <thead>
            <tr class="text-dark">
              <th rowspan="2">User Name</th>
              <th rowspan="2">Order Date</th>
              <th rowspan="2">
                Grand Total 
              </th>
              <!-- <th rowspan="2">Payment Status &<br />Order Status</th> -->
              <th rowspan="2">Coupon</th>
              <!-- <th rowspan="2">Tax</th> -->
              <th style="text-align: center" colspan="6">Order Items</th>
              <!-- <th class="actionBtn" rowspan="2"></th> -->
            </tr>
            <tr class="text-dark">
              <th>Product Name</th>
              <th>Unit Price</th>
              <th>Quantity</th>
              <th>Product Price</th>
              <th> Offer</th>
              <!-- <th>Product Offer</th> -->
              <th>Total Price</th>
            </tr>
          </thead>
          <tbody>
            <% orders.forEach(order => { %> <% order.orderItems.forEach((item,
            index) => { %>
            <tr class="text-dark">
              <% if (index === 0) { %>

              <td rowspan="<%= order.orderItems.length %>">
                <%= order.userName %>
              </td>
              <td rowspan="<%= order.orderItems.length %>">
                <%= new Date(order.orderDate).toLocaleString('en-US', {  day: 'numeric', month: 'short', year: 'numeric'  })
                %>
              </td>

              
              
              <td rowspan="<%= order.orderItems.length %>">
                <%= order.grandTotal %>
              </td>
              <!-- <td rowspan="<%= order.orderItems.length %>">
                <%= order.paymentStatus.type %>
                <br />
                <%= order.orderStatus.type %>
              </td> -->
              <td rowspan="<%= order.orderItems.length %>">
                <% if (order.couponName) { %> <%= order.couponName %>
                <br />
                <%= order.couponDiscountPercentage %> %
                <br />
                <%= order.couponDiscount %> <% } else { %> N/A <% } %>
              </td>
              <!-- <td rowspan="<%= order.orderItems.length %>"><%= order.tax %></td> -->
              <% } %>
              <td><%= item.productName %></td>
              <td><%= item.unitPrice %></td>
              <td><%= item.quantity %></td>
              <td><%= item.price %></td>
              
              <td>
                <% if (item.productDiscountPercentage || item.categoryDiscountPercentage) { %>
                  <%= item.productDiscountPercentage || item.categoryDiscountPercentage %>%
                <% } else { %>
                  <!-- Handle case where neither discount percentage exists -->
                <% } %>
              </td>
              
                
              <td><%= item.totalPrice %></td>
              <!-- <% if (index === 0) { %>
              <td rowspan="<%= order.orderItems.length %>">
                <a class="actionBtn" href=""></a>
              </td>
              <% } %> -->
            </tr>
            <% }); %> <% }); %>
          </tbody>
        </table>
      </div>
    </div>
  </div>
</div>

<!-- table -->

<script>
  // Function to generate order listing HTML
  function generateOrderListing(orders) {
    let html = "";

    orders.forEach((order) => {
      order.orderItems.forEach((item, index) => {
        html += `
                  <tr class="text-dark">
                      ${
                        index === 0
                          ? `<td rowspan="${order.orderItems.length}">${
                              order.userName
                            }</td>
                                      <td rowspan="${
                                        order.orderItems.length
                                      }">${new Date(
                              order.orderDate
                            ).toLocaleString("en-US", {
                              day: "numeric",
                              month: "short",
                              year: "numeric",
                              
                            })}</td>
                                      <td rowspan="${
                                        order.orderItems.length
                                      }">${order.grandTotal}</td>
                                      
                                      <td rowspan="${
                                        order.orderItems.length
                                      }">${
                              order.couponName
                                ? `${order.couponName}<br>${order.couponDiscountPercentage}%<br>${order.couponDiscount}`
                                : "N/A"
                            }</td>


                                      `
                          : ""
                      }
                      <td>${item.productName}</td>
                      <td>${item.unitPrice}</td>
                      <td>${item.quantity}</td>
                      <td>${item.price}</td>
                      <td>
  ${item.productDiscountPercentage ? item.productDiscountPercentage + '%' : item.categoryDiscountPercentage ? item.categoryDiscountPercentage + '%' : ''}
</td>

                      <td>${item.totalPrice}</td>
                      
                  </tr>`;
      });
    });

    return html;
  }

  // Function to handle filter by month
  document
    .getElementById("filterByMonth")
    .addEventListener("click", (event) => {
      event.preventDefault();
      const selectedMonth = document.getElementById("month").value;

      fetch("/admin/monthFilter", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ month: selectedMonth }),
      })
        .then((response) => {
          if (!response.ok) {
            throw new Error("Network response was not ok");
          }
          return response.json();
        })
        .then((data) => {
          if (data && data.length > 0) {
            const tbody = document.querySelector("#my-table tbody");
            tbody.innerHTML = generateOrderListing(data); // Append generated HTML to the table body
          } else {
            // Display a message indicating no orders are available
            const tbody = document.querySelector("#my-table tbody");
            tbody.innerHTML =
              '<tr><td colspan="14" class="text-center">No orders available</td></tr>';
          }
        })
        .catch((error) => {});
    });

  // Function to handle filter by year
  document.getElementById("filterByYear").addEventListener("click", (event) => {
    event.preventDefault();
    const yearFilter = document.getElementById("yearFilter").value;

    fetch("/admin/yearFilter", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ year: yearFilter }),
    })
      .then((response) => {
        if (!response.ok) {
          throw new Error("Network response was not ok");
        }
        return response.json();
      })
      .then((data) => {
        if (data && data.length > 0) {
          const tbody = document.querySelector("#my-table tbody");
          tbody.innerHTML = generateOrderListing(data); // Append generated HTML to the table body
        } else {
          // Display a message indicating no orders are available
          const tbody = document.querySelector("#my-table tbody");
          tbody.innerHTML =
            '<tr><td colspan="14" class="text-center">No orders available</td></tr>';
        }
      })
      .catch((error) => {});
  });
</script>

<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
<script>
  // Initialize Flatpickr for start date picker
  const startDatePicker = flatpickr(".startDatePicker", {
    dateFormat: "Y-m-d", // Date format
    maxDate: "today",
    onChange: function (selectedDates, dateStr, instance) {
      // When the start date changes, update the minimum date of the end date picker
      endDatePicker.set("minDate", dateStr);
    },
  });

  // Initialize Flatpickr for end date picker
  const endDatePicker = flatpickr(".endDatePicker", {
    dateFormat: "Y-m-d", // Date format
    maxDate: "today",
  });

  // Add event listener to the submit button
  document
    .getElementById("filterByDate")
    .addEventListener("click", function (event) {
      event.preventDefault(); // Prevent default form submission

      // Reset previous error messages
      document.querySelector(".startDateError").textContent = "";
      document.querySelector(".endDateError").textContent = "";

      // Get the selected start date
      const startDate = startDatePicker.selectedDates[0]; // Changed from var to const

      // Check if start date is empty
      if (!startDate) {
        document.querySelector(".startDateError").textContent =
          "Please select a start date.";
        return; // Exit function
      }

      // Get the selected end date if available
      const endDate = endDatePicker.selectedDates[0];

      const dateBody = {
        startDate: startDate,
      };
      if (endDate) {
        dateBody.endDate = endDate;
      } else {
        dateBody.endDate = startDate;
      }

      function generateOrderListing(orders) {
        let html = ""; // Initialize an empty string to store HTML markup

        orders.forEach((order) => {
          order.orderItems.forEach((item, index) => {
            html += `
                <tr class="text-dark">
                    ${
                      index === 0
                        ? `<td rowspan="${order.orderItems.length}">${
                            order.userName
                          }</td>
                                    <td rowspan="${
                                      order.orderItems.length
                                    }">${new Date(
                            order.orderDate
                          ).toLocaleString("en-US", {
                            day: "numeric",
                            month: "short",
                            year: "numeric",
                            
                          })}</td>
                                    <td rowspan="${order.orderItems.length}">${
                            order.grandTotal
                          }</td>
                                   
                                    <td rowspan="${order.orderItems.length}">${
                            order.couponName
                              ? `${order.couponName}<br>${order.couponDiscountPercentage}%<br>${order.couponDiscount}`
                              : "N/A"
                          }</td>
                                   `
                        : ""
                    }
                    <td>${item.productName}</td>
                    <td>${item.unitPrice}</td>
                    <td>${item.quantity}</td>
                    <td>${item.price}</td>
                    <td>
  ${item.productDiscountPercentage ? item.productDiscountPercentage + '%' : item.categoryDiscountPercentage ? item.categoryDiscountPercentage + '%' : ''}
</td>

                    <td>${item.totalPrice}</td>
                    
                </tr>`;
          });
        });

        return html; // Return the generated HTML
      }




      // Perform fetch request with the selected dates
      fetch("/admin/dateFilter", {
        method: "POST", // Change method as needed
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(dateBody),
      })
        .then((response) => response.json())
        .then((data) => {
          // Handle response data

          if (data && data.length > 0) {
            const tbody = document.querySelector("#my-table tbody");
            tbody.innerHTML = generateOrderListing(data); // Append generated HTML to the table body
          } else {
            // Display a message indicating no orders are available
            const tbody = document.querySelector("#my-table tbody");
            tbody.innerHTML =
              '<tr><td colspan="14" class="text-center">No orders available</td></tr>';
          }
        })
        .catch((error) => {
          // Handle errors
        });
    });
</script>

<!-- JavaScript code to generate and download PDF     and EXcel-->

<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.1/xlsx.full.min.js"></script>


<script>
  function downloadExcel(fileType = "xlsx") {
    // Clone the table
    const tableClone = document.querySelector("table").cloneNode(true);
    // Remove the action button cells
    const actionCells = tableClone.querySelectorAll("td[rowspan], th[rowspan]");
    actionCells.forEach((cell) => {
      if (cell.innerText.trim() === "download pdf") {
        cell.parentNode.removeChild(cell);
      }
    });
    const actionHeader = tableClone.querySelector(".actionBtn");
    if (actionHeader) {
      actionHeader.parentNode.removeChild(actionHeader);
    }
    // Convert the modified table to a worksheet
    const ws = XLSX.utils.table_to_sheet(tableClone);
    const wb = XLSX.utils.book_new();
    XLSX.utils.book_append_sheet(wb, ws, "Sales Report");
    XLSX.writeFile(wb, `sales_report.${fileType}`);
  }
</script>


<script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.9.3/html2pdf.bundle.min.js"></script>
<script>
  function downloadPDF() {
    // Remove the content of the "action" cell in each row
    // const element = document.querySelector('table');
    const tableClone = document.querySelector("table").cloneNode(true);
    // Remove the action button cells

    

    const actionCells = tableClone.querySelectorAll(".actionBtn");
actionCells.forEach((cell) => {
  cell.remove();
});


    const actionHeader = tableClone.querySelector(".actionBtn");
    if (actionHeader) {
  actionHeader.innerText = "";
}
    const options = {
      filename: "document.pdf",
      image: { type: "pdf", quality: 0.98 },
      html2canvas: { scale: 2 },
      jsPDF: { format: "letter", orientation: "landscape", unit: "in" },
      width: 100,
      margin: [0.5, 0.2],
      pagebreak: { mode: "avoid-all" },
    };
    html2pdf().from(tableClone).set(options).save();
  }
</script>

<script src="https://code.jquery.com/jquery-3.7.0.js"></script>
<script
  src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"
  integrity="sha512-v2CJ7UaYy4JwqLDIrZUI/4hqeoQieOmAZNXBeQyjo21dadnwR+8ZaIJVT8EE2iyI61OV8e6M8PP2/4hpQINQ/g=="
  crossorigin="anonymous"
  referrerpolicy="no-referrer"
></script>

<script>
  // JavaScript Code for Date Pickers, DataTables, and Dropdowns
</script>

<!-- JavaScript Code for PDF Download -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.4.0/jspdf.umd.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/0.4.1/html2canvas.min.js"></script>
<script>
  // JavaScript Code for Downloading PDF
</script>

<!-- Add jsPDF and html2canvas libraries -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.4.0/jspdf.umd.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/0.4.1/html2canvas.min.js"></script>

<%- include('footer') -%>
